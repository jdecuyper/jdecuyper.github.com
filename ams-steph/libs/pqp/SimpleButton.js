SimpleButton = function(mc,oCallback){  this.mc = mc;  this.oCallback = oCallback;  this.mcUp = undefined;  this.mcDown = undefined;  this.mcOver = undefined;  this.mcCaption = undefined;  this.mcBounds = undefined;  this.multiFrame = false;    this.init();}SimpleButton.prototype.init = function(){  var mc = this.mc;  // Lo mette nel dom così può ottenere le dimensioni  var lPutInvisible = false;  if (!mc.is(":visible")){    lPutInvisible = true;    mc.show();  }    // Controlla se ha tutti gli elementi che servono (_up _over e _down)  if ($("#_up",mc).length > 0){    this.mcUp = $("#_up",mc);    // Controlla gli altri stati    var lOver = false;    if ($("#_over",mc).length > 0){      this.mcOver = $("#_over",mc);          lOver = true;    }    var lDown = false;    if ($("#_down",mc).length > 0){      this.mcDown = $("#_down",mc);          lDown = true;    }        if (!lOver){      // Lo duplica dall'_up       this.mcOver = $("#_up",mc).clone();      this.mcOver.attr("id","_over");      mc.append(this.mcOver);    }        if (!lDown){      // Lo duplica dall'_over      this.mcDown = this.mcOver.clone();      this.mcDown.attr("id","_down");      mc.append(this.mcDown);    }        // Controlla la label    if ($("#_caption",this.mc).length > 0){      this.mcCaption = $("#_caption",this.mc);      this.mcCaption.css({"z-index":99});    }        // crea la hitArea    this.createHitArea(this.mcUp,mc);        // Crea il bounding box    this.createBoundingBox(this.mcUp,mc);            // Costruisce il pulsante    this.buildMultiFrameButton();    }else{    trace("ERROR: makeFlashButton -> il div non contiene lo stato _up");    return  }  if (lPutInvisible){    // eventualmente lo rimette invisibile    mc.hide();  }  }SimpleButton.prototype.createBoundingBox = function(rif,container){  container.append("<div id='_bounds'></div>");  this.mcBounds = $("#_bounds",container);  this.mcBounds.css({                      width:rif.width(),                      height:rif.height(),                      background:"transparent"                      });}SimpleButton.prototype.createHitArea = function(rif,container){  if ((rif.width()== 0) || (rif.height()==0)){    trace("ERROR: makeButton -> il div pulsante deve avere delle dimensioni diverse da 0");  }  container.append("<div id='_hitarea'></div>");    this.mcHit = $("#_hitarea",container);  this.mcHit.css({width:rif.width(),                  height:rif.height(),                  background:"transparent",                  "z-index":100});  $(this.mcHit).css('cursor', 'pointer');}SimpleButton.prototype.buildMultiFrameButton = function(){  // Setta il contentitore a relative (solo se non è absolute -> da controllare)  if (this.mc.css("position") != "absolute"){    this.mc.css({position:"relative"});  }  // Setta e posiziona absolute gli altri elementi al suo interno in 0,0  this.setStyles(this.mcUp)  this.setStyles(this.mcOver)  this.setStyles(this.mcDown)  this.setStyles(this.mcHit)  if (this.mcCaption != undefined){    // Posiziona un'eventuale caption    this.setStyles(this.mcCaption)    // la centra    var newx = Math.floor((this.mcUp.width()-this.mcCaption.width())/2);    var newy = Math.floor((this.mcUp.height()-this.mcCaption.height())/2);    this.mcCaption.css({left:newx,top:newy});  }    // Inizializza lo stato  this.onRollout({data:{ct:this}});    // Setta i listeners  this.setListeners();}SimpleButton.prototype.setStyles = function(mc){  mc.css({position:"absolute",          left:0,          top:0});}SimpleButton.prototype.setListeners = function(){  this.mcHit.on("mouseenter",{ct:this},this.onRollover);  this.mcHit.on("mouseleave",{ct:this},this.onRollout);  this.mcHit.on("mousedown",{ct:this},this.onDown);  this.mcHit.on("mouseup",{ct:this},this.onUp);  this.mcHit.on("click",{ct:this},this.onClick);}SimpleButton.prototype.onRollover = function(e){  e.data.ct.mcOver.show();  e.data.ct.mcUp.hide();  e.data.ct.mcDown.hide();}SimpleButton.prototype.onRollout = function(e){  e.data.ct.mcUp.show();  e.data.ct.mcOver.hide();  e.data.ct.mcDown.hide();}SimpleButton.prototype.onDown = function(e){  e.data.ct.mcDown.show();  e.data.ct.mcUp.hide();  e.data.ct.mcOver.hide();}SimpleButton.prototype.onUp = function(e){  e.data.ct.mcOver.show();  e.data.ct.mcUp.hide();  e.data.ct.mcDown.hide();}SimpleButton.prototype.onClick = function(e){  var o = e.data.ct.oCallback;  e.pqpbag = o;  if (o.callback != undefined){    if (o.ct != undefined){      // callback con contesto      o.callback.call(o.ct,e);    }else{      // funzione normale      o.callback.call(null,e);    }  }}